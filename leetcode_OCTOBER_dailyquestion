class Solution {
public:
   int s = 0,ansA = -1;
    int firstOcr(vector<int>& nums, int target) {
        int e = nums.size() - 1 ;

        while (s <= e) {
            int mid = s + (e - s) / 2;

            if (nums[mid] == target) {
                ansA = mid;
                e = mid - 1;
            } else if (nums[mid] > target) {
                e = mid - 1;
            } else {
                s = mid + 1;
            }
        }

        return ansA;
    }

    int LastOcr(vector<int>& nums, int target) {
        int e = nums.size() - 1 ;

        while (s <= e) {
            int mid = s + (e - s) / 2;

            if (nums[mid] == target) {
                ansA = mid;
                s = mid + 1;
            } else if (nums[mid] > target) {
                e = mid - 1;
            } else {
                s = mid + 1;
            }
        }
        return ansA;
    }

    vector<int> searchRange(vector<int>& nums, int target) {
        vector<int> v(2);
        v[0] = firstOcr(nums, target);
        v[1] = LastOcr(nums, target);

        return v;
    }
};
